{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./content-scripts/global_data.js","webpack:///./content-scripts/helpers/get_message_from_popup.js","webpack:///./content-scripts/like-bot/like.js","webpack:///./content-scripts/like-bot/like_bot.js","webpack:///./content-scripts/message-bot/check_message_window.js","webpack:///./content-scripts/message-bot/get_people_to_message.js","webpack:///./content-scripts/message-bot/message_bot.js","webpack:///./content-scripts/helpers/get_data_from_chrome.js","webpack:///./content-scripts/message-bot/open_message.js","webpack:///./content-scripts/message-bot/message_sender.js","webpack:///./content-scripts/message-bot/stop_message_bot.js","webpack:///./content-scripts/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global_data","options","snapchats","likeCounter","dislikeCounter","message_counter","GeneralInterval","text","botStatus","startTimerValue","deletedMessages","initCounter","updateCalendarCounter","like_button","document","querySelector","people_to_message","message_bot_interval","last_message","get_message_from_popup","message_name","callback","chrome","runtime","onMessage","addListener","request","greeting","like","data","click","like_bot_data","interval","setInterval","clearInterval","check_message_window","get_people_to_message","_toConsumableArray","querySelectorAll","map","currentValue","innerText","substring","parentElement","filter","undefined","get_data_from_chrome","data_name","storage","sync","localStorage","setItem","JSON","stringify","open_message","message_list","index","length","message_sender","stop_message_bot","setTimeout","message_bot"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const global_data = () => {\n    return {\n        options: ['ðŸ‘»', 'snap', 'Snap', 'snapchat', 'Snapchat', 'sc:', 'Sc:', 'SNAP', 'SNAPCHAT'],\n        snapchats: [],\n        likeCounter: 0,\n        dislikeCounter: 0,\n        message_counter: 0,\n        GeneralInterval: null,\n        text: '',\n        botStatus: false,\n        startTimerValue: [],\n        deletedMessages: 0,\n        initCounter: 0,\n        updateCalendarCounter: 0,\n\n        like_button: document.querySelector('.profile-action--yes'), // this not working correctly\n        people_to_message: [],\n        message_bot_interval: null,\n        last_message: ''\n    }\n};\n\nexport default global_data;","const get_message_from_popup = ( message_name, callback ) => {\n    chrome.runtime.onMessage.addListener(\n        function(request) {\n            if (request.greeting == message_name) {\n                callback();\n            }\n        }\n    );\n};\n\nexport default get_message_from_popup;","const like = (like_button, data) => {\n    like_button.click();\n    data.likeCounter++;\n};\n\nexport default like;","import global_data from '../global_data';\nimport get_message_from_popup from '../helpers/get_message_from_popup';\nimport like from './like';\n\nlet data = null;\nconst like_bot_data = {\n    interval: null\n};\n\nconst interval = setInterval(() => {\n    if ( document.querySelector('.profile-action--yes') ){\n        data = global_data();\n        clearInterval(interval);\n    }\n}, 1000);\n\nget_message_from_popup('start_liking', () => {\n    like_bot_data.interval = setInterval(() => {\n        like(document.querySelector('.profile-action--yes'), data);\n    }, 400); // this time offset should be setable from popup as 2 or 3 breakepoint.\n});\n\nget_message_from_popup('stop_liking', () => {\n    clearInterval( like_bot_data.interval );\n});","const check_message_window = () => {\n    if ( document.querySelector('.js-messenger-wrap') ){\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport default check_message_window;","const get_people_to_message = () => {\n\n    const data = [...document.querySelectorAll('.contact-card__message')].map(function callback(currentValue){ \n        if(currentValue.innerText.substring(0, 11) === \"You matched\"){ // here should be other examples\n            return currentValue.parentElement.parentElement;\n        }\n    });\n\n    return data.filter((value) => {\n        return value !== undefined\n    });\n};\n\nexport default get_people_to_message;","import get_message_from_popup from '../helpers/get_message_from_popup';\nimport check_message_window from './check_message_window';\nimport get_people_to_message from './get_people_to_message';\nimport message_sender from './message_sender';\nimport stop_message_bot from './stop_message_bot';\n\n\n\nlet people_to_message; // node list with single message\n\nconst open_message_window = () => {\n    document.querySelector('.sidebar-menu__item[href=\"/messenger/open\"]').click();\n};\n\nconst message_bot = () => {\n    get_message_from_popup('start_messaging', () => {\n        if ( check_message_window() === false ) {\n            open_message_window();\n\n            setTimeout(() => {\n                people_to_message = get_people_to_message();\n                message_sender(people_to_message);\n            }, 2000);\n        }\n    });\n\n    get_message_from_popup('stop_messaging', () => {\n        stop_message_bot();\n    });\n};\n\nexport default message_bot;","const get_data_from_chrome = (data_name) => {\n    chrome.storage.sync.get([data_name], data => {\n        localStorage.setItem(data_name, JSON.stringify(data) );\n    });\n};\n\nexport default get_data_from_chrome;","// import global_data from '../global_data';\nimport get_data_from_chrome from '../helpers/get_data_from_chrome';\n\nconst open_message = (message_list, index) => {\n\n    \n    get_data_from_chrome('last_message');\n\n    // global_data.message_bot_interval = setInterval(() => {\n        message_list[index].click();\n        // i++;\n\n        if ( message_list.length <= index ) {\n            // clearInterval( global_data.message_bot_interval );\n        }\n    // }, timeout);\n};\n\nexport default open_message;","import global_data from '../global_data';\nimport open_message from \"./open_message\";\nimport past_message_txt from \"./past_message_txt\";\n\nconst message_sender = (message_list) => {\n    // open_message(message_list, 1000); // open message on every 1000ms\n    // past_message_txt();\n\n    let i = 0;\n\n\n    global_data.message_bot_interval = setInterval(() => {\n        open_message(message_list, i);\n        i++;\n    }, 1000)\n};\n\nexport default message_sender;","import global_data from '../global_data';\nimport check_message_window from './check_message_window';\n\nconst stop_message_bot = () => {\n    if ( check_message_window() === true ) {\n        clearInterval(global_data.message_bot_interval);\n\n        document.querySelector('.messenger-ovl__close').click();\n    }\n};\n\nexport default stop_message_bot;","import like_bot from './like-bot/like_bot'; // import like bot which musn't be run from this file\nimport message_bot from './message-bot/message_bot';\nimport save_data_to_chrome from './helpers/save_data_to_chrome';\n\n\nmessage_bot();"],"sourceRoot":""}